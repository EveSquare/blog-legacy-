{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to MkDocs \u00b6 For full documentation visit mkdocs.org . Commands \u00b6 mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout \u00b6 mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Welcome to MkDocs"},{"location":"#welcome-to-mkdocs","text":"For full documentation visit mkdocs.org .","title":"Welcome to MkDocs"},{"location":"#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"ThreeJS/threeJS00/","text":"Three.js\u3068\u306f\u306a\u306b\u304b \u00b6 WebGL\u306e\u672c\u6765\u8907\u96d1\u306a\u51e6\u7406\u3092\u7c21\u5358\u306b\u8a18\u8ff0\u3059\u308b\u3053\u3068\u304c\u51fa\u6765\u308b\u30e9\u30a4\u30d6\u30e9\u30ea \u00b6 JavaScript\u304b\u3089WebGL\u3092\u76f4\u63a5\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3059\u308b\u3068\u304d3D\u30b7\u30fc\u30f3\u3092\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u3055\u305b\u308b \u51e6\u7406\u306f\u975e\u5e38\u306b\u8907\u96d1\u3067\u9593\u9055\u3044\u3092\u8d77\u3053\u3057\u3084\u3059\u3044\uff0e\u305d\u3053\u3067Three.js\u3092\u4f7f\u3046\u3053\u3068\u3067\u5927\u5e45\u306b\u7c21\u5358\u306b\u3057\u3066\u304f\u308c\u308b\uff0e \u5358\u7d14\u3042\u308b\u3044\u306f\u8907\u96d1\u306a3D\u5f62\u72b6\u306e\u4f5c\u6210 3D\u30b7\u30fc\u30f3\u4e0a\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u3084\u79fb\u52d5 \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3078\u306e\u30c6\u30af\u30b9\u30c1\u30e3\u3084\u30de\u30c6\u30ea\u30a2\u30eb\u306e\u9069\u7528 \u30b7\u30fc\u30f3\u3092\u7167\u3089\u3059\u3055\u307e\u3056\u307e\u306a\u5149\u6e90\u306e\u5229\u7528 3D\u30e2\u30c7\u30ea\u30f3\u30b0\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u304b\u3089\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u8aad\u307f\u8fbc\u307f 3D\u30b7\u30fc\u30f3\u3078\u306e\u9ad8\u5ea6\u306a\u30dd\u30b9\u30c8\u30d7\u30ed\u30bb\u30c3\u30b7\u30f3\u30b0\u52b9\u679c\u306e\u8ffd\u52a0 \u72ec\u81ea\u306b\u4f5c\u6210\u3057\u305f\u30ab\u30b9\u30bf\u30e0\u30b7\u30a7\u30fc\u30c0\u306e\u4f7f\u7528 \u30dd\u30a4\u30f3\u30c8\u30af\u30e9\u30a6\u30c9\u306e\u4f5c\u6210","title":"Three.js\u3068\u306f\u306a\u306b\u304b"},{"location":"ThreeJS/threeJS00/#threejs","text":"","title":"Three.js\u3068\u306f\u306a\u306b\u304b"},{"location":"ThreeJS/threeJS00/#webgl","text":"JavaScript\u304b\u3089WebGL\u3092\u76f4\u63a5\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3059\u308b\u3068\u304d3D\u30b7\u30fc\u30f3\u3092\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u3055\u305b\u308b \u51e6\u7406\u306f\u975e\u5e38\u306b\u8907\u96d1\u3067\u9593\u9055\u3044\u3092\u8d77\u3053\u3057\u3084\u3059\u3044\uff0e\u305d\u3053\u3067Three.js\u3092\u4f7f\u3046\u3053\u3068\u3067\u5927\u5e45\u306b\u7c21\u5358\u306b\u3057\u3066\u304f\u308c\u308b\uff0e \u5358\u7d14\u3042\u308b\u3044\u306f\u8907\u96d1\u306a3D\u5f62\u72b6\u306e\u4f5c\u6210 3D\u30b7\u30fc\u30f3\u4e0a\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u3084\u79fb\u52d5 \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3078\u306e\u30c6\u30af\u30b9\u30c1\u30e3\u3084\u30de\u30c6\u30ea\u30a2\u30eb\u306e\u9069\u7528 \u30b7\u30fc\u30f3\u3092\u7167\u3089\u3059\u3055\u307e\u3056\u307e\u306a\u5149\u6e90\u306e\u5229\u7528 3D\u30e2\u30c7\u30ea\u30f3\u30b0\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u304b\u3089\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u8aad\u307f\u8fbc\u307f 3D\u30b7\u30fc\u30f3\u3078\u306e\u9ad8\u5ea6\u306a\u30dd\u30b9\u30c8\u30d7\u30ed\u30bb\u30c3\u30b7\u30f3\u30b0\u52b9\u679c\u306e\u8ffd\u52a0 \u72ec\u81ea\u306b\u4f5c\u6210\u3057\u305f\u30ab\u30b9\u30bf\u30e0\u30b7\u30a7\u30fc\u30c0\u306e\u4f7f\u7528 \u30dd\u30a4\u30f3\u30c8\u30af\u30e9\u30a6\u30c9\u306e\u4f5c\u6210","title":"WebGL\u306e\u672c\u6765\u8907\u96d1\u306a\u51e6\u7406\u3092\u7c21\u5358\u306b\u8a18\u8ff0\u3059\u308b\u3053\u3068\u304c\u51fa\u6765\u308b\u30e9\u30a4\u30d6\u30e9\u30ea"},{"location":"ThreeJS/threeJS01/","text":"Three.js\u5b66\u7fd2 \u00b6 Three.js\u4e00\u822c\u521d\u671f\u8a2d\u5b9a \u00b6 scene , camera , renderer \u306e\u5b9a\u7fa9 scene -> \u8868\u793a\u3057\u305f\u3044\u3059\u3079\u3066\u306e\u5149\u6e90\u3092\u4fdd\u6301\u3057\u3066\u5909\u66f4\u3092\u76e3\u8996\u3059\u308b\u30b3\u30f3\u30c6\u30ca\u30aa\u30d6\u30b8\u30a7\u30af\u30c8 camera -> \u30b7\u30fc\u30f3\u3092\u63cf\u753b\u3059\u308b\u3068\u304d\u306b\u4f55\u304c\u898b\u3048\u308b\u304b\u3092\u6c7a\u5b9a\u3059\u308b\uff0e renderer -> camera\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u89d2\u5ea6\u306b\u57fa\u3065\u3044\u3066\u30d6\u30e9\u30a6\u30b6\u5185\u3067scene\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u3069\u306e\u3088\u3046\u306b\u898b\u3048\u308b\u304b\u3092\u8a08\u7b97\u3059\u308b var scene = new THREE . Scene (); var camera = new THREE . PerspectiveCamera ( 45 , window . innerWidth / window . innerHeight , 0.1 , 1000 ); var renderer = new THREE . WebGLRenderer (); renderer . setClearColor ( new THREE . Color ( 0xEEEEEE )); renderer . setSize ( window . innerWidth , window . innerHeight ); axes\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u751f\u6210 \u00b6 \u8d64\uff0c\u9752\uff0c\u7dd1\u306e\u7dda\u306e\u3053\u3068 var axes = new THREE . AxisHelper ( 60 ); //60\u306f\u9577\u3055 scene . add ( axes ); \u5e73\u9762\u3092\u4f5c\u6210 \u00b6 \u7070\u8272\u306e\u8584\u3063\u307a\u3089\u3044\u5e73\u9762\u306e\u3053\u3068 var planeGeometry = new THREE . PlaneGeometry ( < \u5e45 > , < \u9ad8\u3055 > ); var planeMaterial = new THREE . MeshBasicMaterial ({ color : 0xcccccc }); //\u898b\u305f\u76ee\u306e\u8a2d\u5b9a var plane = new THREE . Mesh ( planeGeometry , planeMaterial ); //2\u3064\u3092\u7d44\u307f\u5408\u308f\u305b\u3066plane\u3068\u3044\u3046Mesh\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u3059\u308b \u6b63\u3057\u3044\u4f4d\u7f6e\u306b\u914d\u7f6e\u3059\u308b \u00b6 //x\u8ef8\u5468\u308a\u306b90\u5ea6\u56de\u8ee2 plane . rotation . x = - 0.5 * Math . PI ; plane . position . x = 15 ; plane . position . y = 0 ; plane . position . z = 0 ; scene . add ( plane ); cude\u30aa\u30d6\u30b8\u30a7\u30af\u30c8,qsphere\u30aa\u30d6\u30b8\u30a7\u30af\u30c8 \u00b6 \u30de\u30c6\u30ea\u30a2\u30eb\u306ewireframe\u30d7\u30ed\u30d1\u30c6\u30a3\u304ctrue\u306b\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u305f\u3081\uff0cThree.js\u306f\u30bd\u30ea\u30c3\u30c9\u306a\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3067\u306f\u306a\u304f\uff0c\u30ef\u30a4\u30e4\u30fc\u30d5\u30ec\u30fc\u30e0\u3092\u63cf\u753b\u3057\u307e\u3059\uff0e \u203b\u30d7\u30ed\u30b0\u30e9\u30e0\u306f\u30aa\u30e9\u30a4\u30ea\u30fc\u30b8\u30e3\u30d1\u30f3\u51fa\u7248\u306e\u300c\u521d\u3081\u3066\u306eThree.js\u300d\u304b\u3089\u5f15\u7528","title":"Three.js\u5b66\u7fd2"},{"location":"ThreeJS/threeJS01/#threejs","text":"","title":"Three.js\u5b66\u7fd2"},{"location":"ThreeJS/threeJS01/#threejs_1","text":"scene , camera , renderer \u306e\u5b9a\u7fa9 scene -> \u8868\u793a\u3057\u305f\u3044\u3059\u3079\u3066\u306e\u5149\u6e90\u3092\u4fdd\u6301\u3057\u3066\u5909\u66f4\u3092\u76e3\u8996\u3059\u308b\u30b3\u30f3\u30c6\u30ca\u30aa\u30d6\u30b8\u30a7\u30af\u30c8 camera -> \u30b7\u30fc\u30f3\u3092\u63cf\u753b\u3059\u308b\u3068\u304d\u306b\u4f55\u304c\u898b\u3048\u308b\u304b\u3092\u6c7a\u5b9a\u3059\u308b\uff0e renderer -> camera\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u89d2\u5ea6\u306b\u57fa\u3065\u3044\u3066\u30d6\u30e9\u30a6\u30b6\u5185\u3067scene\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u3069\u306e\u3088\u3046\u306b\u898b\u3048\u308b\u304b\u3092\u8a08\u7b97\u3059\u308b var scene = new THREE . Scene (); var camera = new THREE . PerspectiveCamera ( 45 , window . innerWidth / window . innerHeight , 0.1 , 1000 ); var renderer = new THREE . WebGLRenderer (); renderer . setClearColor ( new THREE . Color ( 0xEEEEEE )); renderer . setSize ( window . innerWidth , window . innerHeight );","title":"Three.js\u4e00\u822c\u521d\u671f\u8a2d\u5b9a"},{"location":"ThreeJS/threeJS01/#axes","text":"\u8d64\uff0c\u9752\uff0c\u7dd1\u306e\u7dda\u306e\u3053\u3068 var axes = new THREE . AxisHelper ( 60 ); //60\u306f\u9577\u3055 scene . add ( axes );","title":"axes\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u751f\u6210"},{"location":"ThreeJS/threeJS01/#_1","text":"\u7070\u8272\u306e\u8584\u3063\u307a\u3089\u3044\u5e73\u9762\u306e\u3053\u3068 var planeGeometry = new THREE . PlaneGeometry ( < \u5e45 > , < \u9ad8\u3055 > ); var planeMaterial = new THREE . MeshBasicMaterial ({ color : 0xcccccc }); //\u898b\u305f\u76ee\u306e\u8a2d\u5b9a var plane = new THREE . Mesh ( planeGeometry , planeMaterial ); //2\u3064\u3092\u7d44\u307f\u5408\u308f\u305b\u3066plane\u3068\u3044\u3046Mesh\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u3059\u308b","title":"\u5e73\u9762\u3092\u4f5c\u6210"},{"location":"ThreeJS/threeJS01/#_2","text":"//x\u8ef8\u5468\u308a\u306b90\u5ea6\u56de\u8ee2 plane . rotation . x = - 0.5 * Math . PI ; plane . position . x = 15 ; plane . position . y = 0 ; plane . position . z = 0 ; scene . add ( plane );","title":"\u6b63\u3057\u3044\u4f4d\u7f6e\u306b\u914d\u7f6e\u3059\u308b"},{"location":"ThreeJS/threeJS01/#cudeqsphere","text":"\u30de\u30c6\u30ea\u30a2\u30eb\u306ewireframe\u30d7\u30ed\u30d1\u30c6\u30a3\u304ctrue\u306b\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u305f\u3081\uff0cThree.js\u306f\u30bd\u30ea\u30c3\u30c9\u306a\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3067\u306f\u306a\u304f\uff0c\u30ef\u30a4\u30e4\u30fc\u30d5\u30ec\u30fc\u30e0\u3092\u63cf\u753b\u3057\u307e\u3059\uff0e \u203b\u30d7\u30ed\u30b0\u30e9\u30e0\u306f\u30aa\u30e9\u30a4\u30ea\u30fc\u30b8\u30e3\u30d1\u30f3\u51fa\u7248\u306e\u300c\u521d\u3081\u3066\u306eThree.js\u300d\u304b\u3089\u5f15\u7528","title":"cude\u30aa\u30d6\u30b8\u30a7\u30af\u30c8,qsphere\u30aa\u30d6\u30b8\u30a7\u30af\u30c8"},{"location":"programming/chrome-extention/","text":"Web extension intercepting request \u00b6 \u3084\u308a\u305f\u304b\u3063\u305f\u3053\u3068 \u00b6 GET\u30ea\u30af\u30a8\u30b9\u30c8\u306eResponseBody\u3092\u53d6\u5f97\u3057\u305f\u3044\uff0e \u5019\u88dc\u3068\u3057\u3066\u4ee5\u4e0b\u306e3\u3064\u304c\u30d2\u30c3\u30c8\u3057\u305f\uff0e - webRequest.onBeforeRequest.addListner - devtools.network.onRequestFinished.addListener - mokey patch \u7d50\u8ad6\u3068\u3057\u3066\u5168\u3066\u4e0d\u53ef\u80fd\u3067\u3042\u3063\u305f\uff0e \u00d7 webRequest.onBeforeRequest.addListener \u00b6 extension\u304c\u6271\u3048\u308b\u95a2\u6570\u3067\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u30d6\u30ed\u30c3\u30af\u3059\u308b\u306a\u3069\u306e\u5229\u7528\u7528\u9014\u304c\u3042\u308b\uff0e \u3053\u306e\u30ea\u30b9\u30ca\u30fc\u3067\u53d7\u3051\u53d6\u308c\u308b\u30c7\u30fc\u30bf\u306f\uff0cURL\u306a\u3069\u306e\u30d8\u30c3\u30c0\u60c5\u5831\u306e\u307f\u3067\u3042\u3063\u305f\uff0e \u5b9f\u969b\u306b\u52d5\u304b\u3057\u305f\u30d7\u30ed\u30b0\u30e9\u30e0 sample-extension/ backgtound.js manifest.json //background.js chrome . webRequest . onBeforeRequest . addListener ( request_callback , { urls : [ '<all_urls>' ], types : [ 'xmlhttprequest' ], }, [ \"blocking\" , \"requestBody\" ] ); function request_callback ( details ) { if ( details . method === \"GET\" && details . type === \"xmlhttprequest\" ) { if ( details . url . match ( MER_URL_PATTERN )) { console . log ( details . requestBody ); //undefined } } } //ma n i fest .jso n { \"manifest_version\" : 2 , \"name\" : \"Extension\" , \"version\" : \"0.0.0\" , \"permissions\" : [ \"<all_urls>\" , \"webRequest\" , \"webRequestBlocking\" , ], \"background\" : { \"scripts\" : [ \"background.js\" ] } } background\u30b3\u30f3\u30bd\u30fc\u30eb(Chrome\u306e\u62e1\u5f35\u6a5f\u80fd\u304b\u3089\u78ba\u8a8d\u3067\u304d\u308b)\u306bBody\u304c\u8868\u793a\u3055\u308c\u3066\u3044\u308b\u306f\u305a\uff0e \u00d7 devtools.network.onRequestFinished.addListener \u00b6 documentation Chrome\u306edevelop tool\u3092\u958b\u3044\u305f\u72b6\u614b\u3067\u306a\u3044\u3068\u5b9f\u884c\u3055\u308c\u306a\u3044\u3089\u3057\u3044\uff0e devtools \u3092\u4f7f\u7528\u3059\u308b\u5834\u5408\u306f js \u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u307f\u8fbc\u3080HTML\u30d5\u30a1\u30a4\u30eb\u3092\u7528\u610f\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\uff0e sample-extension2/ devtools.js devtools.html manifest.json //devtools.js function handleRequestFinished ( request ) { chrome . devtools . inspectedWindow . eval ( `console.log(' ${ request . request . url } ');` ); request . getContent ( function ( content ) { chrome . devtools . inspectedWindow . eval ( `console.log(' ${ content } ');` ); }); } } chrome . devtools . network . onRequestFinished . addListener ( handleRequestFinished ); <!-- devtools.html --> <html> <head> <script src=\"devtools.js\"></script> </head> <body></body> </html> //ma n i fest .jso n { \"name\" : \"Extension\" , \"version\" : \"1.0\" , \"manifest_version\" : 2 , \"devtools_page\" : \"devtools.html\" , \"permissions\" : [ \"<all_urls>\" ] } POST\u306e\u30c7\u30fc\u30bf\u306fBody\u3092\u78ba\u8a8d\u3059\u308b\u3053\u3068\u304c\u51fa\u6765\u305f\u304c\uff0cGET\u30ec\u30b9\u30dd\u30f3\u30b9\u306eBody\u306f\u5024\u304c\u7121\u304b\u3063\u305f\uff0e \u00d7 monkey patch \u00b6 \u6563\u898b\u3055\u308c\u305f\u8a18\u4e8b\u306b\u3088\u308b\u3068 window.XMLHttpRequest.prototype.open \u3092\u66f8\u304d\u63db\u3048\u308b\u3053\u3068\u3067intercept\u3067\u304d\u308b\u3089\u3057\u3044\uff0e \u3046\u307e\u304f\u3044\u304b\u305a\uff0e \u4ee5\u4e0b\u30bd\u30fc\u30b9 \u00b6 How can I capture all network requests and full response data when loading a page in Chrome? Chrome Extension: Reading the BODY of an HTTP response object Chrome Extension - How to get HTTP Response Body?","title":"Web extension intercepting request"},{"location":"programming/chrome-extention/#web-extension-intercepting-request","text":"","title":"Web extension intercepting request"},{"location":"programming/chrome-extention/#_1","text":"GET\u30ea\u30af\u30a8\u30b9\u30c8\u306eResponseBody\u3092\u53d6\u5f97\u3057\u305f\u3044\uff0e \u5019\u88dc\u3068\u3057\u3066\u4ee5\u4e0b\u306e3\u3064\u304c\u30d2\u30c3\u30c8\u3057\u305f\uff0e - webRequest.onBeforeRequest.addListner - devtools.network.onRequestFinished.addListener - mokey patch \u7d50\u8ad6\u3068\u3057\u3066\u5168\u3066\u4e0d\u53ef\u80fd\u3067\u3042\u3063\u305f\uff0e","title":"\u3084\u308a\u305f\u304b\u3063\u305f\u3053\u3068"},{"location":"programming/chrome-extention/#webrequestonbeforerequestaddlistener","text":"extension\u304c\u6271\u3048\u308b\u95a2\u6570\u3067\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u30d6\u30ed\u30c3\u30af\u3059\u308b\u306a\u3069\u306e\u5229\u7528\u7528\u9014\u304c\u3042\u308b\uff0e \u3053\u306e\u30ea\u30b9\u30ca\u30fc\u3067\u53d7\u3051\u53d6\u308c\u308b\u30c7\u30fc\u30bf\u306f\uff0cURL\u306a\u3069\u306e\u30d8\u30c3\u30c0\u60c5\u5831\u306e\u307f\u3067\u3042\u3063\u305f\uff0e \u5b9f\u969b\u306b\u52d5\u304b\u3057\u305f\u30d7\u30ed\u30b0\u30e9\u30e0 sample-extension/ backgtound.js manifest.json //background.js chrome . webRequest . onBeforeRequest . addListener ( request_callback , { urls : [ '<all_urls>' ], types : [ 'xmlhttprequest' ], }, [ \"blocking\" , \"requestBody\" ] ); function request_callback ( details ) { if ( details . method === \"GET\" && details . type === \"xmlhttprequest\" ) { if ( details . url . match ( MER_URL_PATTERN )) { console . log ( details . requestBody ); //undefined } } } //ma n i fest .jso n { \"manifest_version\" : 2 , \"name\" : \"Extension\" , \"version\" : \"0.0.0\" , \"permissions\" : [ \"<all_urls>\" , \"webRequest\" , \"webRequestBlocking\" , ], \"background\" : { \"scripts\" : [ \"background.js\" ] } } background\u30b3\u30f3\u30bd\u30fc\u30eb(Chrome\u306e\u62e1\u5f35\u6a5f\u80fd\u304b\u3089\u78ba\u8a8d\u3067\u304d\u308b)\u306bBody\u304c\u8868\u793a\u3055\u308c\u3066\u3044\u308b\u306f\u305a\uff0e","title":"\u00d7 webRequest.onBeforeRequest.addListener"},{"location":"programming/chrome-extention/#devtoolsnetworkonrequestfinishedaddlistener","text":"documentation Chrome\u306edevelop tool\u3092\u958b\u3044\u305f\u72b6\u614b\u3067\u306a\u3044\u3068\u5b9f\u884c\u3055\u308c\u306a\u3044\u3089\u3057\u3044\uff0e devtools \u3092\u4f7f\u7528\u3059\u308b\u5834\u5408\u306f js \u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u307f\u8fbc\u3080HTML\u30d5\u30a1\u30a4\u30eb\u3092\u7528\u610f\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\uff0e sample-extension2/ devtools.js devtools.html manifest.json //devtools.js function handleRequestFinished ( request ) { chrome . devtools . inspectedWindow . eval ( `console.log(' ${ request . request . url } ');` ); request . getContent ( function ( content ) { chrome . devtools . inspectedWindow . eval ( `console.log(' ${ content } ');` ); }); } } chrome . devtools . network . onRequestFinished . addListener ( handleRequestFinished ); <!-- devtools.html --> <html> <head> <script src=\"devtools.js\"></script> </head> <body></body> </html> //ma n i fest .jso n { \"name\" : \"Extension\" , \"version\" : \"1.0\" , \"manifest_version\" : 2 , \"devtools_page\" : \"devtools.html\" , \"permissions\" : [ \"<all_urls>\" ] } POST\u306e\u30c7\u30fc\u30bf\u306fBody\u3092\u78ba\u8a8d\u3059\u308b\u3053\u3068\u304c\u51fa\u6765\u305f\u304c\uff0cGET\u30ec\u30b9\u30dd\u30f3\u30b9\u306eBody\u306f\u5024\u304c\u7121\u304b\u3063\u305f\uff0e","title":"\u00d7 devtools.network.onRequestFinished.addListener"},{"location":"programming/chrome-extention/#monkey-patch","text":"\u6563\u898b\u3055\u308c\u305f\u8a18\u4e8b\u306b\u3088\u308b\u3068 window.XMLHttpRequest.prototype.open \u3092\u66f8\u304d\u63db\u3048\u308b\u3053\u3068\u3067intercept\u3067\u304d\u308b\u3089\u3057\u3044\uff0e \u3046\u307e\u304f\u3044\u304b\u305a\uff0e","title":"\u00d7 monkey patch"},{"location":"programming/chrome-extention/#_2","text":"How can I capture all network requests and full response data when loading a page in Chrome? Chrome Extension: Reading the BODY of an HTTP response object Chrome Extension - How to get HTTP Response Body?","title":"\u4ee5\u4e0b\u30bd\u30fc\u30b9"}]}